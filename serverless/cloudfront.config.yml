Origins:
  # ${self:custom.s3BucketName}.s3.${self:provider.region}.amazonaws.com
  - DomainName: !GetAtt WebAppS3Bucket.RegionalDomainName
    ## An identifier for the origin which must be unique within the distribution
    Id: vofShopS3bucket
    ## In case you don't want to restrict the bucket access use CustomOriginConfig and remove S3OriginConfig
    S3OriginConfig:
      OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${OriginAccessIdentity}
Enabled: true
IPV6Enabled: true
HttpVersion: http2
PriceClass: PriceClass_100
## Uncomment the following section in case you are using a custom domain
# Aliases:
# - mysite.example.com
DefaultRootObject: index.html
## Since the Single Page App is taking care of the routing we need to make sure ever path is served with index.html
## The only exception are files that actually exist e.h. app.js, reset.css
CustomErrorResponses:
  - ErrorCode: 404
    ResponseCode: 200
    ResponsePagePath: /index.html
DefaultCacheBehavior:
  AllowedMethods: [ 'GET', 'HEAD', 'OPTIONS' ]
  CachedMethods: [ 'GET', 'HEAD' ]
  ForwardedValues:
    Headers:
      - Access-Control-Request-Headers
      - Access-Control-Request-Method
      - Origin
      - Authorization
    ## Defining if and how the QueryString and Cookies are forwarded to the origin which in this case is S3
    QueryString: false
    Cookies:
      Forward: none
  ## The origin id defined above
  TargetOriginId: vofShopS3bucket
  ## The protocol that users can use to access the files in the origin. To allow HTTP use `allow-all`
  ViewerProtocolPolicy: redirect-to-https
  Compress: true
  DefaultTTL: 0
## The certificate to use when viewers use HTTPS to request objects.
ViewerCertificate:
  CloudFrontDefaultCertificate: 'true'
